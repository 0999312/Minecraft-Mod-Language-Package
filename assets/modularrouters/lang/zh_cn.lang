item.extruder2_module.name=Extruder Module Mk2
item.activator_module.name=Activator Module
item.rangedown_upgrade.name=Range Downgrade
item.augment_core.name=Augment Core
item.pickup_delay_augment.name=Pickup Delay Augment
item.fast_pickup_augment.name=Fast Pickup Augment
item.range_up_augment.name=Range Up Augment
item.range_down_augment.name=Range Down Augment
item.redstone_augment.name=Redstone Augment
item.regulator_augment.name=Regulator Augment
item.stack_augment.name=Stack Augment
item.xp_vacuum_augment.name=XP Vacuum Augment
tile.template_frame.name=Template Frame
guiText.tooltip.allDirections=All
guiText.tooltip.extruder2.template=§bTemplate\nPlace copies of block items here to be used as the extruder template.\n• §eLeft-Click:§7 reduce stack size\n• §eRight-Click:§7 increase stack size\n• §eShift + Left-Click:§7 clear stack
guiText.tooltip.activator.action=Action
guiText.tooltip.activator.lookDirection=Look
guiText.tooltip.activator.sneak=Sneak
guiText.tooltip.mouseOverHelp.false=Click to activate mouse-over help
guiText.tooltip.mouseOverHelp.true=Mouse-over help active \n§7Click to deactivate
guiText.label.inspectionSubject.FOOD=Food Value
guiText.popup.filter=§a§nFilter \n \n§rPlace ghost copies of items here to filter what this module works on.  If the item in the router's buffer doesn't match the filter item(s) here, then the module will not run.  See also the filter control buttons below.
guiText.popup.filterControl=§a§nFilter Control \n \n§rThese buttons control how the filter is applied to the item in the router's buffer. See individual tooltips on each button for more information.
guiText.popup.direction=§a§nDirection Control \n \n§rThis area of the GUI allows you to define the direction the module operates in. This direction is relative to the front of the router. The default direction is NONE, which for most modules means the module will not run; you will need to define a direction.
guiText.popup.noDirection=§a§nDirection Control \n \n§rThis area of the GUI allows you to define the direction the module operates in. This direction is relative to the router's facing. \n \nThis module does not have the concept of a direction, so this area is empty.
guiText.popup.augments=§a§nAugments \n \n§rThese four slots can take Module Augments, craftable items which can be inserted into a module to modify or enhance its functionality in some way. \n \nSee the item tooltips on augment items for more information on what each augment does.
guiText.popup.activator.action=§a§nAction \n \n§rThe activator module can simulate: \n- Activating a block (e.g. flipping a lever); \n- Right-clicking an item (e.g. using a flint & steel, which must be in the router's buffer); \n- or right-clicking the nearest entity (e.g. milking a cow with a bucket in the router's buffer).
guiText.popup.activator.sneak=§a§nSneak \n \n§rToggle whether the router should simulate sneaking while doing its right-click operation.
guiText.popup.activator.look=§a§nLook Direction \n \n§rWhen right-clicking, the router can: \n- Face level, targeting a block directly in the module's direction, up to 4 blocks away; \n- Look upward, targeting the block directly above the block in the module's direction; \n- Look downward, targeting the block directly below the block in the module's direction.
guiText.popup.player.control=§a§nPlayer Module \n \n§rHere you can define: \n- Whether the router transfers items from the player to the router, or from the router to the player; \n- Which section of the player inventory should be interacted with.
guiText.popup.detector.signalLevel=§a§nRedstone Signal Level \n \n§rHere can you define the redstone signal level, an integer quantity between 0 and 15 inclusive.  A signal of this strength will be emitted in the module's direction when the filter matches the buffer item.
guiText.popup.detector.weakStrong=§a§nRedstone Signal Strength \n \n§r- A §oweak§r redstone signal will power the adjacent block only; \n- A §ostrong§r redstone signal will power the adjacent block and blocks adjacent to that block (like a vanilla Repeater).
guiText.popup.flinger.speed=§a§nFlinger Speed \n \n§rThis is the speed which is imparted to the item when thrown from the router. \n \nAs a rough guide, a speed of 1.0 and a pitch of 30 (and a horizontal module facing) will fling an item about 20 blocks in that direction.
guiText.popup.flinger.pitch=§a§nFlinger Pitch \n \n§rThis is the vertical offset in degrees: \n \n- When the module faces horizontally, it's the offset up or down from that horizontal (X or Z) axis \n- When the module faces up or down, it's the offset from the vertical (Y) axis.
guiText.popup.flinger.yaw=§a§nFlinger Speed \n \n§rThis is the horizontal offset in degrees: \n \n- When the module faces horizontally, it's the offset left or right from that horizontal (X or Z) axis \n- When the module faces up or down, it's the offset from the vertical (Y) axis.  This is only useful if you also have a non-zero pitch.
guiText.popup.fluid.maxTransfer=§a§nMax Transfer \n \n§rThis is the maximum amount of fluid that the router will attempt to transfer in one operation. \n \nNote that the transfer rate is still limited by the number of Fluid Transfer Upgrades in the router, as well as the transfer rate of the external tank (if there is one). So this number should be considered a limit rather than a target.
guiText.popup.fluid.direction=§a§nTransfer Direction \n \n§rHere you can control whether the router pushes fluid out to the world or tank, or pulls fluid from the world or tank.
guiText.popup.extruder2.template=§a§nTemplate \n \n§rHere you can define a template of blocks to extrude; note that real blocks are not placed, but rather special uncraftable & unlootable template blocks. \n \nPut ghost copies of blocks in the template to define what is extruded; blocks will be extruded from left to right and top to bottom in order. You can extrude more than one of each block if you want (left- or right-click blocks in the template to adjust). \n \nNote you can also place non-block items (e.g. a stick) in the template; while they obviously can't be placed, they are used as spacers to "place" one or more air blocks in the pattern.
gui.config.extruder2BaseRange=Base Range for Extruder Module Mk2 (no Range Upgrades)
gui.config.extruder2MaxRange=Hard Maximum Range for Extruder Module Mk2 (with Range Upgrades)
gui.config.backgroundTint=Tint module GUI backgrounds with the same color as the module item
itemText.misc.whitelist=Whitelist
itemText.misc.blacklist=Blacklist
itemText.misc.rangeInfo=Range: %s%d §b[base %d, max %d]
itemText.extruder2.template=Template Blocks:
itemText.targetingHint=• Sneak + Right-Click an inventory to set target,\n  or anywhere else to clear target\n• Left-Click to indicate current target's position
itemText.augments=Augments:
itemText.augments.stackInfo=%d items/tick
itemText.augments.pickupDelay=%d ticks (%f sec)
itemText.activator.action.ACTIVATE_BLOCK=Activate Block
itemText.activator.action.USE_ITEM=Right-click item in buffer
itemText.activator.action.USE_ITEM_ON_ENTITY=Right-click item in buffer on nearest entity
itemText.activator.direction.LEVEL=Look Level
itemText.activator.direction.ABOVE=Look Above
itemText.activator.direction.BELOW=Look Below
itemText.usage.item.extruder2_module=Operates like the Extruder Mk1, but places template blocks from an internal pattern buffer instead of real blocks from the router's buffer.
itemText.usage.item.activator_module=Simulates right-clicking blocks and entities using the item(s) in the router's buffer.\nActs as if the router is a fake player.
itemText.usage.item.fast_pickup_augment=Allow the Vacuum Module to ignore the normal pickup delays on dropped items.
itemText.usage.item.pickup_delay_augment=Increases the pickup delay time for dropped or flung items by 10 ticks per augment.
itemText.usage.item.redstone_augment=Allows a module to define its own specific redstone behaviour, overriding the router's redstone behaviour.
itemText.usage.item.regulator_augment=Allow precise control over how many items are kept in an inventory.
itemText.usage.item.range_up_augment=Increases range of modules by 1 block per augment (up to hard maximum - see module tooltip)
itemText.usage.item.range_down_augment=Reduces range of modules by 1 block per augment.
itemText.usage.item.stack_augment=Allows the module to process multiple items per tick.\nThis overrides Stack Upgrades inserted in the router.
itemText.usage.item.xp_vacuum_augment=Allows the Vacuum Module to collect XP orbs instead of items.\nXP is either converted into Bottles o' Enchanting in the router's buffer,\nor stored as liquid XP in a tank in the router (if liquid XP is available)
chatText.misc.targetCleared=§eTarget cleared
guidebook.para.augmentCore=This item forms the base of all augments.  It has no use other than as a crafting component.
guidebook.para.augmentOverview=Augments replace the older Module Enhancements system in previous versions of Modular Routers.  Module Augments are items which can be inserted into a module to modify or improve its functionality in various ways.  Augments can be inserted or removed at will via a module's GUI.
guidebook.words.augments=Module Augments
jei.recipe.reset.name=Module Reset
jei.recipe.reset.description=Completely resets the module to its newly-crafted state.  Beware: ALL data, including filter settings and enchantments, will be lost (but any installed augments will be returned)
