# General
itemGroup.integratedcrafting=集成合成学
general.integratedcrafting.description=对集成动力学网络中的东西进行合成。

# Gui
gui.integratedcrafting.partsettings.channel.interface=合成频道
gui.integratedcrafting.partinterface.slot.message.valid=目标合成是合法的。
gui.integratedcrafting.partinterface.slot.message.invalid=目标不接受合成。
gui.integratedcrafting.partinterface.slot.message.norecipe=变量中不包含合成。

# Advancements
advancement.integratedcrafting.craft_crafting_interface=合成²接口
advancement.integratedcrafting.craft_crafting_interface.desc=合成一个合成接口
advancement.integratedcrafting.insert_recipe_planks=自动切板
advancement.integratedcrafting.insert_recipe_planks.desc=向合成接口中插入一个橡木木板合成
advancement.integratedcrafting.craft_crafting_writer=合成²写入器
advancement.integratedcrafting.craft_crafting_writer.desc=合成一个合成写入器
advancement.integratedcrafting.craft_planks=高效自动切板
advancement.integratedcrafting.craft_planks.desc=使用合成写入器开始一个木板的合成工作

# Part types
parttype.parttypes.integratedcrafting.interface_crafting.name=合成接口
parttype.parttypes.integratedcrafting.interface_crafting.info=存有合成变量，以便在目标机器中进行合成。
parttype.parttypes.integratedcrafting.crafting_writer.name=合成写入器
parttype.parttypes.integratedcrafting.crafting_writer.info=开始合成工作

# Aspect property types
aspect.aspecttypes.integratedcrafting.boolean.ignorestorage.name=忽略存储内容
aspect.aspecttypes.integratedcrafting.boolean.ignorecrafting.name=忽略合成工作
aspect.aspecttypes.integratedcrafting.boolean.craftmissing.name=合成缺失原料
aspect.aspecttypes.integratedcrafting.integer.craftamount.name=合成数量

## Network
aspect.aspects.integratedcrafting.read.list.network.recipes.name=合成表
aspect.aspects.integratedcrafting.read.list.network.recipes.info=一个存储所有合成表的列表
aspect.aspects.integratedcrafting.read.list.network.craftingjobs.name=激活合成工作
aspect.aspects.integratedcrafting.read.list.network.craftingjobs.info=一个存储所有激活的合成的列表
aspect.aspects.integratedcrafting.read.list.network.craftingingredients.name=合成原料
aspect.aspects.integratedcrafting.read.list.network.craftingingredients.info=一个存储有合成原料的列表

## Crafting
aspect.aspects.integratedcrafting.write.recipe.craft.name=合成配方表
aspect.aspects.integratedcrafting.write.recipe.craft.info=依据指定的合成表合成
aspect.aspects.integratedcrafting.write.itemstack.craft.name=合成物品
aspect.aspects.integratedcrafting.write.itemstack.craft.info=合成指定的物品
aspect.aspects.integratedcrafting.write.fluidstack.craft.name=合成流体
aspect.aspects.integratedcrafting.write.fluidstack.craft.info=合成指定的流体
aspect.aspects.integratedcrafting.write.integer.craft.name=合成能量
aspect.aspects.integratedcrafting.write.integer.craft.info=合成指定数量的能量

# ------ On the Dynamics of Integration contents ------

info_book.integratedcrafting.section.main=合成

info_book.integratedcrafting.introduction=介绍
info_book.integratedcrafting.introduction.text1=&l集成合成学&r是&l集成动力&r的一个自动合成的拓展（在&l集成动力&r网络中）。这可以合成&o物品&r, &o流体&r and &o能量&r.这需要两个部分：&l合成接口&r和&l合成写入器&r。
info_book.integratedcrafting.introduction.text2=The &lCrafting Interface&r can be placed next to any kind of crafting machine, and can be used to provide crafting options to the network based on &lVariable Cards&r containing &8Recipes&0.
info_book.integratedcrafting.introduction.text3=The &lCrafting Writer&r can then be used to automatically start crafting jobs based on the recipes that are exposed by all &lCrafting Interfaces&r in the network.
info_book.integratedcrafting.introduction.text4=The following sections explain how this autocrafting process works.

info_book.integratedcrafting.crafting_interface=合成接口

info_book.integratedcrafting.crafting_interface.introduction=Introduction
info_book.integratedcrafting.crafting_interface.introduction.text1=In this section, we will go over the basics, crafting process, configuration and special features of the &lCrafting Interface&r.

info_book.integratedcrafting.crafting_interface.basics=Basics
info_book.integratedcrafting.crafting_interface.basics.text1=The &lCrafting Interface&r is used to tell the network &owhere&r and &ohow&r things can be crafted.
info_book.integratedcrafting.crafting_interface.basics.text2=By pointing a &lCrafting Interface&r to a machine &o(like a Crafting table or Furnace)&r, this interface will be bound to this machine to handle recipes.
info_book.integratedcrafting.crafting_interface.basics.text3=When opening the GUI of a &lCrafting Interface&r, you can insert &lVariable Cards&r that hold &8Recipes&0. This will tell the interface that the given recipe can be crafted using the bound machine.

info_book.integratedcrafting.crafting_interface.crafting=Crafting Process
info_book.integratedcrafting.crafting_interface.crafting.text1=This section will explain how the crafting process is being handled by &lCrafting Interfaces&r. This information is essential to get the most out of this mod, and to debug any issues you may encounter.
info_book.integratedcrafting.crafting_interface.crafting.text2=When a crafting job is started (for example with the &lCrafting Writer&r), one (or more) &lCrafting Interface(s)&r will be used that have a recipe corresponding to the given job. The &lCrafting Interface&r is responsible for inserting all inputs of the recipe into the bound machine. It will do this based on the storage network contents, as provided by &lIntegrated Tunnels interfaces&r.
info_book.integratedcrafting.crafting_interface.crafting.text3=A &lCrafting Interface&r will however &lnot&r import the crafting results from the bound machine. The player is responsible for making sure that the crafting results end up back into the network. The Crafting Table is an exception for this, only a &lCrafting Interface&r is required to craft with this. The &lCrafting Interface&r will track changes in the storage network, and it will only mark the crafting job as completed once the expected outputs are present in the storage network. This can be achieved by either placing an active &lIntegrated Tunnels importer&r onto the machine, or by letting the machine automatically output into the &lCrafting Interface&r. Everything (items, fluids, energy) that is inserted into the &lCrafting Interface&r will be inserted into the storage network for the configured channel.
info_book.integratedcrafting.crafting_interface.crafting.text4=The following figures show examples of valid minimal setups for autocrafting with a Crafting Table and Furnace.

info_book.integratedcrafting.crafting_interface.configuration=Configuration
info_book.integratedcrafting.crafting_interface.configuration.text1=Like most &lIntegrated Dynamics&r parts, you can configure things in the &lCrafting Interface&r such as the channel, priority and tick rate.
info_book.integratedcrafting.crafting_interface.configuration.text2=Additionally, you can change the target side separately &ofor each ingredient type&r. This is useful if the bound machine accepts different ingredient types in different sides. For example, items may be accepted from the sides, while fluids may be accepted from the top.

info_book.integratedcrafting.crafting_interface.recipe_feedback=Recipe Feedback
info_book.integratedcrafting.crafting_interface.recipe_feedback.text1=When inserting &lVariable Cards&r into the &lCrafting Interface&r, you will either see a &2green checkmark&0 or a &4red cross&0 to indicate if the given recipe is valid for the bound machine. You can hover over these symbols to get more information.
info_book.integratedcrafting.crafting_interface.recipe_feedback.text2=This is an early-feedback system in cases you accidentally insert the wrong recipe into an interface, for example if you insert the crafting recipe for a chest into a &lCrafting Interface&r that is bound to a furnace.
info_book.integratedcrafting.crafting_interface.recipe_feedback.text3=If you see a &4red cross&0, this means that the &lVariable Card&r either not exposes a valid recipe, or if the recipe can not be crafted in the bound machine.
info_book.integratedcrafting.crafting_interface.recipe_feedback.text4=A &2green checkmark&0 indicates that the &lVariable Card&r contains a valid recipe, &oand&r the machine can (probably) handle the given recipe.

info_book.integratedcrafting.crafting_interface.distribution=Distributed Crafting Jobs
info_book.integratedcrafting.crafting_interface.distribution.text1=If you are working with slow machines, or if you want to improve the efficiency of certain crafting jobs, you can &odistribute&r a crafting job over multiple &lCrafting Interfaces&r. For example, this feature allows you to distribute the crafting of 40 iron ingots evenly over 10 furnaces.
info_book.integratedcrafting.crafting_interface.distribution.text2=The only things that is needed to make this work, is to make sure that all machines that you want to distribute over, have a &lCrafting Interface&r that (at least) expose exactly the same recipe that you want to distribute. In the case of our previous example, you would have to make sure that all 10 furnaces have a &lCrafting Interface&r containing (at least) exactly the same recipe for smelting iron ingots.

info_book.integratedcrafting.crafting_interface.dynamic_recipes=Dynamic Recipes
info_book.integratedcrafting.crafting_interface.dynamic_recipes.text1=Following the dynamic nature of &lIntegrated Dynamics&r &lVariable Cards&r, recipes that are exposed through &lCrafting Interfaces&r can also be fully dynamic. For example, you could expose a recipe that changes based on it being day or night, or the availability of a certain item in the network.
info_book.integratedcrafting.crafting_interface.dynamic_recipes.text2=&lCrafting Interfaces&r will automatically detect when a recipe is updated, and all new crafting jobs will immediately use the new recipe. However, all running crafting jobs will still use the old recipe.
info_book.integratedcrafting.crafting_interface.dynamic_recipes.text3=Note that the more your recipe changes, the more lag may be produced. So use this feature with caution.

info_book.integratedcrafting.crafting_interface.debugging_jobs=Debugging Crafting Jobs
info_book.integratedcrafting.crafting_interface.debugging_jobs.text1=While setting up autocrafting, you may run into situations where you crafting job does not work properly due to misconfiguration.
info_book.integratedcrafting.crafting_interface.debugging_jobs.text2=You can debug these cases using crafting-related aspects from the &lNetwork Reader&r, such as getting the list of all available recipes in the network, getting all running crafting jobs, and getting all missing crafting job ingredients. Visualizing these lists in &lDisplay Panels&r can help you pinpoint the problem you are experiencing.
info_book.integratedcrafting.crafting_interface.debugging_jobs.text3=Note that if you have &lIntegrated Terminals&r installed, you can use the &lCrafting Job Terminal&r to visualize all running crafting jobs, visualize any missing ingredients, or cancel the jobs.

info_book.integratedcrafting.crafting_writer=合成写入器
info_book.integratedcrafting.crafting_writer.text1=The &lCrafting Writer&r allows you to automatically start crafting jobs based on certain conditions using the recipes that are exposed by &lCrafting Interfaces&r.
info_book.integratedcrafting.crafting_writer.text2=Using the following aspects, you can start crafting jobs for the given recipe, output item, output fluid or output energy. Using the aspect settings, you can configure the crafting channel, whether or not already-running crafting jobs should block any new jobs, if crafting jobs for any missing inputs should also be started, and whether or not the presence of ingredients in the storage network should block any new crafting jobs.
info_book.integratedcrafting.crafting_writer.text3=If you want to insert a &lVariable Card&r for telling that &onothing&r should be crafted, just insert an empty value, such as a &lVariable Card&r for the &8Item&0 value type without an actual item in it.
info_book.integratedcrafting.crafting_writer.text4=Note that if you have &lIntegrated Terminals&r installed, you will be able to start crafting jobs visually from the &lStorage Terminal&r.

info_book.integratedcrafting.section.tutorials=Crafting Tutorials

info_book.integratedcrafting.tutorials.introduction=Introduction
info_book.integratedcrafting.tutorials.introduction.text1=This section contains several tutorials that help you to learn &lIntegrated Crafting&r, the &lIntegrated Dynamics&r add-on for autocrafting within &lIntegrated Dynamics&r networks.

info_book.integratedcrafting.tutorials.autocrafting_setup=Setup Autocrafting
info_book.integratedcrafting.tutorials.autocrafting_setup.text1=In this first &lIntegrated Crafting&r tutorial, we are going to cover the basic setup of autocrafting.
info_book.integratedcrafting.tutorials.autocrafting_setup.text2=The first requirement for autocrafting is the &lCrafting Interface&r, which is a network part that must be faced to a machine, such as a Crafting Table or Furnace. First, craft such a &lCrafting Interface&r, and make it face a &lCrafting Table&r.
info_book.integratedcrafting.tutorials.autocrafting_setup.text3=Next, we are going to tell the &lCrafting Interface&r how it can craft Oak Planks. Do this by opening up your &lLogic Programmer&r, and write a &lVariable Card&r that contains a &lRecipe&r with as input an Oak Log, and as output 4 Oak Planks &o(do not change the default item match settings)&r.
info_book.integratedcrafting.tutorials.autocrafting_setup.text4=Finally, let's insert your newly created recipe into your &lCrafting Interface&r to finish this first tutorial. If a &2green checkmark&0 is shown, this means that your recipe is valid, and that the recipe is now available to the network for autocrafting.

info_book.integratedcrafting.tutorials.autocrafting_trigger=Trigger Autocrafting
info_book.integratedcrafting.tutorials.autocrafting_trigger.text1=In this second &lIntegrated Crafting&r tutorial, we will start a crafting job for Oak Planks using the &lCrafting Writer&r.
info_book.integratedcrafting.tutorials.autocrafting_trigger.text2=First let's start by crafting a &lCrafting Writer&r. This will allow you to automatically start crafting jobs for a given recipe, item, fluid or energy. Once you have this, place the writer anywhere on the network that has your &lCrafting Interface&r from the previous tutorial.
info_book.integratedcrafting.tutorials.autocrafting_trigger.text3=Before we tell the &lCrafting Writer&r to craft Oak Planks, we first need to insert some Oak Logs into the network. In order to do this, attach some storage (like a Chest) to the network using an &lIntegrated Tunnels&r &lItem Interface&r, and make sure that the Chest contains at least one Oak Log.
info_book.integratedcrafting.tutorials.autocrafting_trigger.text4=Now, we tell the &lCrafting Writer&r to start crafting Oak Planks. Do this by creating a &lVariable Card&r containing Oak Planks using your &lLogic Programmer&r, and insert this into the &lCrafting Writer&r.
info_book.integratedcrafting.tutorials.autocrafting_trigger.text5=If you configured everything correctly, you will be able to see that one Oak Log has been converted into 4 Oak Planks. Once you remove these planks, 4 new planks will be crafted if other logs were available. You can play around with the &lCrafting Writer&r aspect settings to for example ignore the storage contents, and craft as many planks as possible.
info_book.integratedcrafting.tutorials.autocrafting_trigger.text6=The figure at the end of this section shows an example the required parts of a setup for completing this tutorial.
